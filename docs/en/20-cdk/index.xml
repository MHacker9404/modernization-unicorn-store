<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS .NET CDK on ASP.NET Modernization Workshop</title>
    <link>/en/20-cdk.html</link>
    <description>Recent content in AWS .NET CDK on ASP.NET Modernization Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Oct 2019 16:56:01 -0400</lastBuildDate>
    
	<atom:link href="/en/20-cdk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CDK Module Overview</title>
      <link>/en/20-cdk/10-overview.html</link>
      <pubDate>Sat, 12 Oct 2019 18:06:59 -0400</pubDate>
      
      <guid>/en/20-cdk/10-overview.html</guid>
      <description>Welcome to the .NET AWS CDK module of the workshop! &amp;ldquo;CDK&amp;rdquo; stands for Cloud Development Kit.
Workshop Goals The goal of this lab is to guide participants through adding support for MySQL database to both ASP.NET application codebase, and to the existing infra-as-code C# CDK projects defining cloud CI/CD pipeline and cloud application deployment environment.
This workshop skips the &amp;ldquo;Hello, World&amp;rdquo; CDK project creation, and instead focuses on somewhat more in-depth capabilities of the CDK, showing higher-fidelity code samples implementing closer-to-real-life scenarios.</description>
    </item>
    
    <item>
      <title>Setting Up Dev Environment</title>
      <link>/en/20-cdk/20-setting-up.html</link>
      <pubDate>Sun, 13 Oct 2019 14:29:41 -0400</pubDate>
      
      <guid>/en/20-cdk/20-setting-up.html</guid>
      <description>You may skip this page and move on to the next step and you are using Amazon-supplied VM image (AMI) at an Amazon event, with all tools installed and pre-configured.
Pre-Requisites  Either MS SQL Server (LocalDB version is perfectly suitable), or PostgreSQL, per Common Prerequisites. MySQL is required as the goal of the module is to add MySQL support to the app. MySQL Workbench, a MySQL management UI console, is recommended.</description>
    </item>
    
    <item>
      <title>Running App Locally</title>
      <link>/en/20-cdk/30-running-app-locally.html</link>
      <pubDate>Sun, 13 Oct 2019 21:19:51 -0400</pubDate>
      
      <guid>/en/20-cdk/30-running-app-locally.html</guid>
      <description>Starting Unicorn Store Web Application     Notes      Once you have prepared your development environment, the only thing remains is to ensure that UnicornStore.csproj is selected as a startup project, switch hosting from &amp;ldquo;IIS Express&amp;rdquo; to Console, as shown on the screenshot on the left, and start the application in the debug mode.    After debugging session has started, a command console window will open first with application console output in it, along with a web browser window, showing the home page of the Unicorn Store ASP.</description>
    </item>
    
  </channel>
</rss>