<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS .NET CDK on ASP.NET Modernization Workshop</title>
    <link>/en/20-cdk.html</link>
    <description>Recent content in AWS .NET CDK on ASP.NET Modernization Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Oct 2019 16:56:01 -0400</lastBuildDate>
    
	<atom:link href="/en/20-cdk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CDK Module Overview</title>
      <link>/en/20-cdk/10-overview.html</link>
      <pubDate>Sat, 12 Oct 2019 18:06:59 -0400</pubDate>
      
      <guid>/en/20-cdk/10-overview.html</guid>
      <description>Welcome to the .NET AWS CDK module of the workshop!
Workshop Goals The goal of this lab is to guide participants through adding support for MySQL database to both ASP.NET application codebase, and to the existing infra-as-code C# CDK projects defining cloud CI/CD pipeline and cloud application deployment environment.
This workshop skips the &amp;ldquo;Hello, World&amp;rdquo; CDK project creation, and instead focuses on somewhat more in-depth capabilities of the CDK, showing higher-fidelity code samples implementing closer-to-real-life scenarios.</description>
    </item>
    
    <item>
      <title>Setting Up Dev Environment</title>
      <link>/en/20-cdk/20-setting-up.html</link>
      <pubDate>Sun, 13 Oct 2019 14:29:41 -0400</pubDate>
      
      <guid>/en/20-cdk/20-setting-up.html</guid>
      <description>You may skip this page and move on to the next step and you are using Amazon-supplied VM image (AMI) at an Amazon event, with all tools installed and pre-configured.
Pre-Requisites  Either MS SQL Server (LocalDB version is perfectly suitable), or PostgreSQL, per Common Prerequisites. MySQL is required as the goal of the module is to add MySQL support to the app. MySQL Workbench, a MySQL management UI console, is recommended.</description>
    </item>
    
    <item>
      <title>Running App Locally</title>
      <link>/en/20-cdk/30-running-app-locally.html</link>
      <pubDate>Sun, 13 Oct 2019 21:19:51 -0400</pubDate>
      
      <guid>/en/20-cdk/30-running-app-locally.html</guid>
      <description>Starting Unicorn Store Web Application     Notes      Once you have prepared your development environment, the only thing remains is to ensure that UnicornStore.csproj is selected as a startup project, switch hosting from &amp;ldquo;IIS Express&amp;rdquo; to Console, as shown on the screenshot on the left, and start the application in the debug mode.    After debugging session has started, a command console window will open first with application console output in it, along with a web browser window, showing the home page of the Unicorn Store ASP.</description>
    </item>
    
    <item>
      <title>Creating AWS CI/CD Pipeline</title>
      <link>/en/20-cdk/40-creating-ci-cd-pipeline.html</link>
      <pubDate>Mon, 14 Oct 2019 11:11:14 -0400</pubDate>
      
      <guid>/en/20-cdk/40-creating-ci-cd-pipeline.html</guid>
      <description>Before we dive into the code base of the Unicorn Store solution and start hacking it, let&amp;rsquo;s spend a few moments to create the CI/CD pipeline in AWS, as creating it takes a few minutes to complete, and while that is in progress, we&amp;rsquo;ll spend some time looking into the structure of project and getting familiar with CDK concepts.
    Notes      Again, please select either Posgres or SQL Server configuration from Solution&amp;rsquo;s Build Configuration drop-down in Visual Studio&amp;hellip;    &amp;hellip;and mark &amp;ldquo;CicdInfraAsCode&amp;rdquo; project as a startup project.</description>
    </item>
    
    <item>
      <title>Project Structure</title>
      <link>/en/20-cdk/50-project-structure.html</link>
      <pubDate>Mon, 14 Oct 2019 14:11:33 -0400</pubDate>
      
      <guid>/en/20-cdk/50-project-structure.html</guid>
      <description>Let&amp;rsquo;s use the few minutes that it takes for the application CI/CD pipeline infrastructure to build, to get familiar with the structure of the project.
    Notes      Solution contains one ASP.NET Core application project named UnicornStore, and three CDK-related projects: CdkLib - a C# class library project, containing reusable components shared between two executable CDK projects.    The first of executable CDK projects is CicdInfraAsCode - the project we ran at the previous step of the lab.</description>
    </item>
    
    <item>
      <title>Starting Pipeline Build</title>
      <link>/en/20-cdk/60-starting-cicd-build.html</link>
      <pubDate>Tue, 15 Oct 2019 11:34:12 -0400</pubDate>
      
      <guid>/en/20-cdk/60-starting-cicd-build.html</guid>
      <description>At this point the CI/CD pipeline cloud infrastructure, the build out of which was launched two chapters back, should now be completed.
First, please check the command prompt console where you ran cdk deploy for the &amp;ldquo;CicdInfraAsCode&amp;rdquo; project, to make there were errors. You should see something like the following at the tail of the output after command has finished:
 30/30 | 1:10:43 PM | CREATE_COMPLETE | AWS::CloudFormation::Stack | Unicorn-Store-CI-CD-PipelineStack âœ… Unicorn-Store-CI-CD-PipelineStack Stack ARN: arn:aws:cloudformation:us-east-1:123456789012:stack/Unicorn-Store-CI-CD-PipelineStack/eee6e58c-6808-48a2-9885-c719f44dd8b6  Next, navigate to the CodePipeline in the AWS Console and observe &amp;ldquo;Unicorn-Store-CI-CD-Pipeline&amp;rdquo; in the list, showing the &amp;ldquo;Failed&amp;rdquo; status next to it.</description>
    </item>
    
    <item>
      <title>Cleanup</title>
      <link>/en/20-cdk/99-cleanup.html</link>
      <pubDate>Tue, 15 Oct 2019 11:53:46 -0400</pubDate>
      
      <guid>/en/20-cdk/99-cleanup.html</guid>
      <description>Some manual clean up steps are required to delete resources created in the course of this module. You may need to follow these steps if you used your personal or corporate AWS Account.
You will also need to use these steps if you are taking this lab at an AWS event and you simply want to reset your cloud resources and restart the module from the beginning.
 When using your personal or corporate AWS Account, leaving resources created by this lab will result in recurring monthly charges for used resources.</description>
    </item>
    
  </channel>
</rss>